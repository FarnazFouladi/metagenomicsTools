library("ecodist")
library("ape")

rm(list=ls())

setwd("D:\\BigDataScalingFactors\\July_StoolRemoved");

myT <- read.table("risk_raw_countsTaxaAsColumnsStoolOnly.txt", sep="\t", header=TRUE,row.names=1)
myTNorm <- read.table("risk_raw_countsTaxaAsColumnsStoolOnlyNormalized.txt", sep="\t", header=TRUE, row.names=1)
myTNormLogged <- read.table("risk_raw_countsTaxaAsColumnsStoolOnlyNormalizedAndLogged.txt", sep="\t", header=TRUE, row.names=1)
myTRand<- read.table("risk_raw_countsTaxaAsColumnsStoolOnlyWithRandomNoise.txt", sep="\t", header=TRUE, row.names=1)


myDist <- bcdist(myTRand)
myPCOA <- pcoa(myDist)
rowSums <- apply(myT, 1, sum)

countDist<- vector(length=length(rowSums)*(length(rowSums)-1)/2)

x <- 1
for( i in 1:(length(rowSums)-1) )
{
	for( j in ( (i+1):length(rowSums)) )
	{
		countDist[x] <- abs( rowSums[i] - rowSums[j] )
		x = x + 1
	}
}

rVal <- cor( myDist, countDist, method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(myDist, countDist, main=title, xlab="BC Dist", ylab = "difference in number of sequences")

rVal <- cor( log10(rowSums), myPCOA$vectors[,1], method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(log10(rowSums), myPCOA$vectors[,1], xlab="log10(Number of Sequences)", ylab = "PCoA1", main=title)


summary(lm(myDist~ countDist))

corDist<- vector(length=length(rowSums)*(length(rowSums)-1)/2)

myFrame <- as.matrix(myTNorm)
myFrame <- t(myFrame)
myFrame <- as.numeric(myFrame)
myFrame <- as.matrix(myFrame)
myPearsonCov <- cor( myFrame) 

x <- 1
for( i in 1:(length(rowSums)-1) )
{
	for( j in ( (i+1):length(rowSums)) )
	{
		corDist[x] <- myPearsonCov[i,j]
		x = x + 1
	}
}

plot( corDist, countDist)
summary( lm(corDist ~ countDist))


# from ape's pcoa() function.....#
centre <- function(D, n) {
        One <- matrix(1, n, n)
        mat <- diag(n) - One/n
        mat.cen <- mat %*% D %*% mat
    }
 D<-myDist
D <- as.matrix(D)
    n <- nrow(D)
   delta1 <- centre((-0.5 * D^2), n)
   
    D.eig <- eigen(delta1)
 
 plot(D.eig$vectors[,1], myPCOA$vectors[,1])

 
#RLE normalization 
library("edgeR")
edgeRT <- myT
edgeRT <- edgeRT + 1
edgeRT <- t( edgeRT )
myEdgeR = DGEList(counts=edgeRT)
myNormFactors = calcNormFactors(myEdgeR, method = "RLE")
myCommonDisp = estimateCommonDisp(myNormFactors);
myPseudoCounts = myCommonDisp$pseudo.counts;
myPseudoCounts = t(myPseudoCounts)
myDist <- bcdist(myPseudoCounts)


rVal <- cor( myDist, countDist, method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(myDist, countDist, main=title, xlab="BC Dist", ylab = "difference in number of sequences")

myPCOA <- pcoa(myDist)

rVal <- cor( log10(rowSums), myPCOA$vectors[,1], method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(log10(rowSums), myPCOA$vectors[,1], xlab="log10(Number of Sequences)", ylab = "PCoA1", main=title)

library("DESeq2")
library("phyloseq")
deseqT <- myT
deseqT <- deseqT + 1
deseqT <- t(deseqT )
colData <- data.frame(condition=factor(rep( "1", ncol(deseqT))))
diagdds = DESeqDataSetFromMatrix(deseqT , colData, formula(~ 1))
diagdds = estimateSizeFactors(diagdds )
diagdds = estimateDispersions(diagdds, fitType='local')
diagvst = getVarianceStabilizedData(diagdds)
dseqOut <- otu_table(diagvst, taxa_are_rows=T)
dseqOut <- t(dseqOut)

myDist <- bcdist(dseqOut)


rVal <- cor( myDist, countDist, method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(myDist, countDist, main=title, xlab="BC Dist", ylab = "difference in number of sequences")

myPCOA <- pcoa(myDist)

rVal <- cor( log10(rowSums), myPCOA$vectors[,1], method="spear" );
title <- paste("r^2=", round( rVal * rVal ,digits=3))
plot(log10(rowSums), myPCOA$vectors[,1], xlab="log10(Number of Sequences)", ylab = "PCoA1", main=title)



 