library("ecodist")
library("ape")

rm(list=ls())

setwd("G:\\BigDataScalingFactors\\July_StoolRemoved");

myT <- read.table("risk_raw_countsTaxaAsColumnsStoolOnly.txt", sep="\t", header=TRUE,row.names=1)
myTNorm <- read.table("risk_raw_countsTaxaAsColumnsStoolOnlyNormalized.txt", sep="\t", header=TRUE, row.names=1)
myTNormLogged <- read.table("risk_raw_countsTaxaAsColumnsStoolOnlyNormalizedAndLogged.txt", sep="\t", header=TRUE, row.names=1)


myDist <- bcdist(myT)
myPCOA <- pcoa(myDist)

rowSums <- apply(myT, 1, sum)

plot(log10(rowSums), myPCOA$vectors[,1])

corVals<- vector()

for( i in 1:nrow(myT)) 
{
	corVals[i] <- cor(  myPCOA$vectors[,1],as.numeric(myT[,i]) ,method="spear")
}

plot(log10(rowSums), corVals)

countDist<- vector(length=length(rowSums)*(length(rowSums)-1)/2)

x <- 1
for( i in 1:(length(rowSums)-1) )
{
	for( j in ( (i+1):length(rowSums)) )
	{
		countDist[x] <- abs( rowSums[i] - rowSums[j] )
		x = x + 1
	}
}

plot(myDist, countDist)
summary(lm(myDist~ countDist))

corDist<- vector(length=length(rowSums)*(length(rowSums)-1)/2)

myPearsonCov <- cor( t(myT), method="kendall") 

x <- 1
for( i in 1:(length(rowSums)-1) )
{
	for( j in ( (i+1):length(rowSums)) )
	{
		corDist[x] <- myPearsonCov[i,j]
		x = x + 1
	}
}

plot(myDist, corDist)


# from ape's pcoa() function.....#
centre <- function(D, n) {
        One <- matrix(1, n, n)
        mat <- diag(n) - One/n
        mat.cen <- mat %*% D %*% mat
    }
 D<-myDist
D <- as.matrix(D)
    n <- nrow(D)
   delta1 <- centre((-0.5 * D^2), n)
   
    D.eig <- eigen(delta1)
 
 plot(D.eig$vectors[,1], myPCOA$vectors[,1])
