rm(list=ls())

# a major limitation of this simulation is the assumption of normality
# more complex (realistic) powers simulations would more closely 
# match the actual distribution of count data from a real metagenomic dataset		

numSimulations <- 1

# there are typically around 70-75 families that are called by the RDP
# classification scheme in diverse sample types (such as gut or oral 
# microbiota) in large datasets (Fodor lab, unpublished data)
numTaxa <- 75

numCases <- 400
numControls <- 800

# here we assume that 20% of the bugs are different between
# case and control and cesarian and have an interaction term
# we don't know the true # that will be different in our large cohort
# but this doesn't seem entirely out of line with our preliminary data
# which showed several a number of significant taxa despite a very small sample size.
fractionTruePositives <- 0.20

# for simplicity we only have one effect size for all effects
# obviously, this can be assigned individually if there was 
# interested in expanding the complexity of the power simulation
globalEffectSize = .4

# Cesarian rate in 2014 according to http://www.childbirthconnection.org/article.asp?ck=10554
fractionCesarian <- 0.329

casesAreCesarian <- rnorm(numCases) <= fractionCesarian 
controlsAreCesarian <- rnorm(numControls) <= fractionCesarian 
allAreCesarian <- c(casesAreCesarian ,controlsAreCesarian)
allIsCase <- c( rep(TRUE, numCases), rep(FALSE, numControls) )

for( i in 1:numSimulations)
{
	pValuesCaseControl <- vector()
	pValuesCesarian <- vector()
	pValuesInteraction <- vector()
	taxaisCaseControlPositive <- rnorm(numTaxa) <= fractionTruePositives
	taxaisCesarianPositive <- rnorm(numTaxa) <= fractionTruePositives
	
	for( j in 1:numTaxa)
	{
		controlVals <- vector()
		
		for ( k in 1:numControls ) 
		{
			thisEffectSize = 0;
			if( controlsAreCesarian[k] &  taxaisCesarianPositive[j] ) 
			{
				thisEffectSize = globalEffectSize;
			}
			
			controlVals[k] = rnorm(1, mean= thisEffectSize )
		}
		
		caseVals <- vector()
		
		for ( k in 1:numCases ) 
		{
			thisEffectSize = 0;
			
			if( taxaisCaseControlPositive[j] ) 
			{
				thisEffectSize = globalEffectSize;
			}
			
			if( casesAreCesarian[k] &  taxaisCesarianPositive[j] ) 
			{
				thisEffectSize = thisEffectSize +  globalEffectSize;
			}
			
			if( casesAreCesarian[k] &  taxaisCesarianPositive[j] &  taxaisCaseControlPositive[j] ) 
			{
				# if the taxa is responsive to both case and control and cesarian
				# there is an interaction doubling the impact of either one alone
				thisEffectSize = thisEffectSize + 2 * globalEffectSize
			}
			
			caseVals[k] = rnorm(1, mean= thisEffectSize )
		}
	
		# horribly inefficient here, but seems to still be fast enough
		data <- c( caseVals, controlVals ) 
		
		# build model with the interaction term
		myLm <- lm( data ~ allIsCase * allAreCesarian ) 
		
		#record p-values with anova
		myAnova <- anova(myLm)
		
		# use ANOVA to capture the p-values
		pValuesCaseControl[j] <- anova(myLm)$"Pr(>F)"[1]
		pValuesCesarian[j] <- anova(myLm)$"Pr(>F)"[2]
		pValuesInteraction[j] <- anova(myLm)$"Pr(>F)"[3]
	}
}