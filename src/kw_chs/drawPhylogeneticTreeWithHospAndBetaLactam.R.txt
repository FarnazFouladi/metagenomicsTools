##phylogenetic tree with hospital and drug resistance details
##7/12/16

rm(list=ls())

library(stringr)
library(ape)
# ?plot.phylo

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\Phylogenetic Trees")

kpneu = read.tree("RAxML_bipartitions.kpneu71raxml.tre")
kpneu$tip.label = gsub("_V1", "", kpneu$tip.label)

##color by hospital (use tree figure color scheme)
hospCol = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\CHS paper\\CHS figures\\HospitalColors.txt",
                     sep="\t", header=T, colClasses="character", comment.char = "")
meta = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\paper1_analysisMethods\\figures\\UNCCMetaData_Final_8-5-15.txt", 
                  sep="\t", header=T, colClasses = c("numeric", "numeric", rep("character", 7)))
getHospCol <- function(strain) {
  hosp = meta$Abstracted_StudyFacility[meta$SpecNumber==as.numeric(strain)]
  return(hospCol$color[hospCol$facility==hosp])
}

jpeg("phylogeneticTreeWithHospAndBetaLactam.jpg", res=300, height=2500, width=2000)
# layout(matrix(c(1, 1, 2, 2, 3, 3, 4, 5), 2, 4, byrow=F),
#        heights=c(rep(2,3), rep(1,2)), widths=c(2, .25, 1, 1))
layout(matrix(1:4, 1, 4, byrow=F), widths=c(2, .25, 1, 1))

##root at node 66
rr.66 = root(kpneu, outgroup = "66")

##only give bootstrap values if > cutoff
bootcut = 50
bootstraps = as.numeric(rr.66$node.label)
rem = bootstraps <= bootcut
rr.66$node.label[rem] = ""
# rr.66$node.label = paste(rr.66$node.label, "") #add space

lad = ladderize(rr.66)

# plot(rr.66, type="phylogram", show.node.label=T, no.margin=T, cex=1, edge.width = 2, show.tip.label = F, adj=1)
# plot(lad, type="phylogram", show.node.label=F, no.margin=T, cex=.5, edge.width = 2, show.tip.label = T, adj=1)
# nodelabels()
plot(lad, type="phylogram", show.node.label=T, no.margin=T, cex=.7, edge.width = 2, show.tip.label = F, 
     adj=.5, srt=45, label.offset = -.0001)

##get tips
#http://stackoverflow.com/questions/34364660/how-to-get-correct-order-of-tip-labels-in-ape-after-calling-ladderize-function
is_tip = lad$edge[,2] <= length(lad$tip.label)
ordered_tips = lad$edge[is_tip, 2]
treetips = rev(lad$tip.label[ordered_tips])

##http://grokbase.com/t/r/r-sig-phylo/137syf0c3c/coordinates-for-phylo-tips
lastPP <- get("last_plot.phylo", envir = .PlotPhyloEnv)
tip <- 1:lastPP$Ntip
XX <- lastPP$xx[tip]
YY <- lastPP$yy[tip]
xlim = lastPP$x.lim

colors = sapply(lad$tip.label, getHospCol, USE.NAMES = F)

##scale bar
add.scale.bar(cex=1, lwd=2)

##draw lines connecting to the edge
for(i in 1:length(tip)) {
  lines(x=c(XX[i], (xlim[2]+1)), y=c(YY[i], YY[i]), col=colors[i], lty=1, lwd=.5)
}
linelabel=-1.2
mtext(" A", side=3, cex=1, adj=0, line=linelabel)

####hospital plot
colors = sapply(treetips, getHospCol, USE.NAMES = F) #ladderized tree is in a different order than the tip names
par(mar=c(0,0,0,0))
numTips = length(treetips)
y = numTips:1
# symbols(x=rep(1, numTips), y=y, squares = rep(1, numTips), fg=colors, bg=colors,
# xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(1,numTips), xlim=c(1,1))
off=0.5 #offset from middle
plot(0, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(1,numTips), xlim=c(-off,off))
#rectangle for each sample
for(i in 1:numTips) {
  rect(-off, y[i]-off, off, y[i] + off, col = colors[i], border=NA)
}

##draw lines connecting to the edge
for(i in 1:numTips) {
  lines(x=c(-1, 1), y=c(y[i], y[i]), col=colors[i], lty=1, lwd=.5)
}

text(x=-off, y=(numTips+.6), labels="hospital", offset=0, adj=c(0,0), cex=1)

##sample name in rectangle
text(x=rep(0, numTips), y=y, treetips)

mtext("B", side=3, cex=1, adj=0, line=linelabel)

####resistance figure; beta-lactams only
res = read.table("..//blastCardsProHomologGeneTables_pid80.0_len90.0_collapsed_suppTable.txt",
                 sep="\t", header=T, colClasses="character", quote="")
# percent = as.numeric(res$percentGenomesWithGene)
# genes = res$cardsGene[percent > 75]
# #>50:
# # [1] "AAC(6')"  "aadA"     "aadA11"   "aadA12"   "aadA13"   "aadA15"   "aadA17"   "aadA2"    "aadA21"   "aadA22"   "aadA23"  
# # [12] "aadA24"   "aadA25"   "aadA3"    "aadA8"    "acrA"     "acrB"     "acrD"     "APH(3'')" "APH(6)"   "catI"     "emrB"    
# # [23] "emrD"     "KPC"      "LEN"      "mdtB"     "mdtC"     "mdtD"     "mphA"     "OKP"      "OXA"      "plasmid"  "SHV"     
# # [34] "sul1"     "TEM" 
# #>75:
# # [1] "acrA"     "acrB"     "acrD"     "APH(3'')" "APH(6)"   "emrB"     "emrD"     "KPC"      "LEN"      "mdtB"     "mdtC"    
# # [12] "mdtD"     "OKP"      "OXA"      "SHV"      "sul1"     "TEM"  
# abbrev = unique(substr(genes, 1, 3))
# #>50:
# # [1] "AAC" "aad" "acr" "APH" "cat" "emr" "KPC" "LEN" "mdt" "mph" "OKP" "OXA" "pla" "SHV" "sul" "TEM"
# #>75:
# # [1] "acr" "APH" "emr" "KPC" "LEN" "mdt" "OKP" "OXA" "SHV" "sul" "TEM"

##plot the beta-lactams only
bl = c("KPC", "LEN", "OKP", "OXA", "SHV", "TEM")
blonly = res[res$cardsGene %in% bl,]
# names(blres)[blres[2,] != blres[3,]] #len and okp columns are visually identical
# ##combine len and okp:
# # blres$cardsGene[blres$cardsGene=="LEN"] = "LEN\\OKP"
# blres = blres[blres$cardsGene!="OKP",]
# bl = c("KPC", "LEN", "OXA", "SHV", "TEM")
# blres = res[res$cardsGene %in% bl,]

##get number of matching genes
blcount = data.frame(matrix(NA, nrow = nrow(blonly), ncol = ncol(blonly)))
names(blcount) = names(blonly)
blcount$cardsGene = blonly$cardsGene
blcount$numberGenomesWithGene = blonly$numberGenomesWithGene
blcount$percentGenomesWithGene = blonly$percentGenomesWithGene
for(r in 1:nrow(blonly)) {
  for(c in 4:ncol(blonly)) {
    count = ifelse(blonly[r,c]=="none", 0, 1) + str_count(blonly[r,c], ";")
    blcount[r,c] = count
  }
}
max = max(blcount[,-(1:3)]) #4
strains = sub("X", "", names(blcount))
par(mar=c(0,0,0,0))
plot(NA, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(1,numTips), xlim=c(-off,length(bl)+off-1))
##draw lines connecting to the edge
for(i in 1:numTips) {
  lines(x=c(-1, 0), y=c(y[i], y[i]), col=colors[i], lty=1, lwd=.5)
}
##plot presence/absence
# for(r in 1:nrow(blres)) {
#   colors = rep(NA, numTips)
#   for(t in 1:length(treetips)) {
#     colors[t] = ifelse(blres[r, strains==treetips[t]]=="none", "black", "red")
#   }
#   #rectangle for each sample
#   for(i in 1:numTips) {
#     rect(-off+r-1, y[i]-off, off+r-1, y[i] + off, col = colors[i], border=NA)
#   }
#   text(x=-off+r-1, y=(numTips+1), labels=blres$cardsGene[r], offset=0, adj=c(0,0), cex=.7)
# }
##plot number of genes
palColors = colorRampPalette(c("white", "red"))(5)
palColors[1] = "light gray"
for(r in 1:nrow(blcount)) {
  colors = rep(NA, numTips)
  for(t in 1:length(treetips)) {
    count = blcount[r, strains==treetips[t]]
    colors[t] = palColors[count+1]
#     if(count == 0) {
#       colors[t] = palColors[1]
#     } else if(count == 1) {
#       colors[t] = palColors[2]
#     } else if(count == 2) {
#       colors[t] = palColors[3]
#     } else if(count == 3) {
#       colors[t] = palColors[4]
#     } else if(count == 4) {
#       colors[t] = palColors[5]
#     }
  }
  #rectangle for each sample
  for(i in 1:numTips) {
    rect(-off+r-1, y[i]-off, off+r-1, y[i] + off, col = colors[i], border=NA)
  }
  text(x=-off+r-1, y=(numTips+.6), labels=blcount$cardsGene[r], offset=0, adj=c(0,0), cex=.9)
}
##draw lines separating columns
for(r in 1:nrow(blcount)) {
  abline(v=off+r-1, col="white")
}
mtext("C", side=3, cex=1, adj=0, line=linelabel)

write.table(blcount, "..\\numberOfBetaLactamaseGenes.txt", row.names = F, col.names = T, quote=F, sep="\t")

####legend
par(mar=c(0,0,0,0))
plot(NA, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(0,1), xlim=c(0,1))
# legend("topleft", 
#        legend = c(expression(underline("Legend for B")), hospCol$facility, rep("", 3),
#                   expression(underline("Legend for C")), "gene present", "gene absent"),
#        col = c("white", hospCol$color, rep("white", 4), "red", "black"),
#        pch=c(NA, rep(15, nrow(hospCol)), rep(NA, 4), 15, 15), 
#        bty='n', cex=1)
legend("topleft", 
       legend = c(expression(underline("Legend for B")), hospCol$facility, rep("", 3),
                  expression(underline("Legend for C")), "No genes", "1 gene", "2 genes", "3 genes", "4 genes"),
       col = c("white", hospCol$color, rep("white", 4), palColors),
       pch=c(NA, rep(15, nrow(hospCol)), rep(NA, 4), rep(15, max+1)), 
       bty='n', cex=1.5)

dev.off()