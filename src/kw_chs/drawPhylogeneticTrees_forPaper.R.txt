##make files for phylogenetic tree in paper
##kleb pneu only, colored by hospital
##6/9/16

rm(list=ls())

library(ape)

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\Phylogenetic Trees")

kpneu = read.tree("RAxML_bipartitions.kpneu71raxml.tre")
kpneu$tip.label = gsub("_V1", "", kpneu$tip.label)

##color by hospital (use tree figure color scheme)
hospCol = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\CHS paper\\CHS figures\\HospitalColors.txt",
                     sep="\t", header=T, colClasses="character", comment.char = "")
meta = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\paper1_analysisMethods\\figures\\UNCCMetaData_Final_8-5-15.txt", 
                  sep="\t", header=T, colClasses = c("numeric", "numeric", rep("character", 7)))
getHospCol <- function(strain) {
  hosp = meta$Abstracted_StudyFacility[meta$SpecNumber==as.numeric(strain)]
  return(hospCol$color[hospCol$facility==hosp])
}

col = sapply(kpneu$tip.label, getHospCol)

##full tree
pdf("PhyloTree_kpneu_byHosp_fanAll.pdf", height=40, width=40)
plot(kpneu, type="fan", show.node.label=F, tip.color=col, no.margin=T, cex=1.5, edge.width = 2)
add.scale.bar(cex=4)
dev.off()

##collapse distantly related
long = c("66", "43", "48", "21", "24", "31", "49")
rem = long[1:(length(long)-1)] #keep 49 to have line leading off
collapse = drop.tip(kpneu, tip=rem) # keep 49
col = sapply(collapse$tip.label, getHospCol)
col[collapse$tip.label=="49"] = "black"
collapse$tip.label[collapse$tip.label=="49"] = "tree"
me = max(collapse$edge.length) #0.0003612494
sort(collapse$edge.length, decreasing = T)[2] 
collapse$edge.length[collapse$edge.length==me] = 8e-5
pdf("PhyloTree_kpneu_byHosp_fanCollapseLong.pdf", height=30, width=30)
plot(collapse, type="fan", show.node.label=F, tip.color=col, no.margin=T, cex=2)
add.scale.bar(cex=2)
dev.off()

##collapse closely related
keep = c("35", "55", "8") #strains to keep to have line leading off
rem = kpneu$tip.label[!(kpneu$tip.label %in% keep) & !(kpneu$tip.label %in% long)]
collapse = drop.tip(kpneu, tip=rem) # keep 49
col = sapply(collapse$tip.label, getHospCol)
pdf("PhyloTree_kpneu_byHosp_fanCollapseShort.pdf", height=30, width=30)
plot(collapse, type="fan", show.node.label=F, tip.color=col, no.margin=T, cex=2)
add.scale.bar()
dev.off()

##ladderized zoom in on same tree as tree with antibiotics
rr.66 = root(kpneu, outgroup = "66")
bootcut = 50
bootstraps = as.numeric(rr.66$node.label)
rem = bootstraps <= bootcut
rr.66$node.label[rem] = ""
collapse = drop.tip(rr.66, tip=long)
lad = ladderize(collapse)
col = sapply(lad$tip.label, getHospCol)
# jpeg("PhyloTree_kpneu_byHosp_ladRemoveLong.jpg", res=300, height=3000, width=2000)
tiff("PhyloTree_kpneu_byHosp_ladRemoveLong.tiff", res=300, height=3000, width=2000)
plot(lad, type="phylogram", show.node.label=F, no.margin=T, cex=1, edge.width = 2, show.tip.label = T, 
     tip.color=col)
nodelabels(lad$node.label, adj=c(1, 0), frame="none", col="darkgray", cex=.8)
# tiplabels(lad$tip.label)
add.scale.bar(x=0.000067, y=-.1)
dev.off()

####ladderized zoom in on same tree as tree with antibiotics, with strain names aligned
jpeg("PhyloTree_kpneu_byHosp_ladRemoveLong_alignLabels.jpg", res=300, height=3000, width=2000)
# tiff("PhyloTree_kpneu_byHosp_ladRemoveLong_alignLabels.tif", res=300, height=3000, width=2000)

plot(lad, type="phylogram", show.node.label=F, no.margin=T, cex=1, edge.width = 2, show.tip.label = F, 
     tip.color=col)
nodelabels(lad$node.label, adj=c(1, 0), frame="none", col="darkgray", cex=.8)
add.scale.bar(x=0.000065, y=-.1)

##get tips
#http://stackoverflow.com/questions/34364660/how-to-get-correct-order-of-tip-labels-in-ape-after-calling-ladderize-function
is_tip = lad$edge[,2] <= length(lad$tip.label)
ordered_tips = lad$edge[is_tip, 2]
treetips = rev(lad$tip.label[ordered_tips])

##http://grokbase.com/t/r/r-sig-phylo/137syf0c3c/coordinates-for-phylo-tips
lastPP <- get("last_plot.phylo", envir = .PlotPhyloEnv)
tip <- 1:lastPP$Ntip
XX <- lastPP$xx[tip]
YY <- lastPP$yy[tip]
xlim = lastPP$x.lim

colors = sapply(lad$tip.label, getHospCol, USE.NAMES = F)

##draw lines connecting to the edge
for(i in 1:length(tip)) {
  lines(x=c(XX[i], (xlim[2]-1e-06)), y=c(YY[i], YY[i]), col=colors[i], lty=3, lwd=.5)
}
text(x=xlim[2], y=YY, labels=lad$tip.label, col=colors)

dev.off()
