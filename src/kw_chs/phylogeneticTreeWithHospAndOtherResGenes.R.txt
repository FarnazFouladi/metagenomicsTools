##phylogenetic tree with hospital and drug resistance details for non-betalactamase genes
##7/25/16

rm(list=ls())

library(stringr)
library(ape)

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\Phylogenetic Trees")

kpneu = read.tree("RAxML_bipartitions.kpneu71raxml.tre")
kpneu$tip.label = gsub("_V1", "", kpneu$tip.label)

##color by hospital (use tree figure color scheme)
hospCol = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\CHS paper\\CHS figures\\HospitalColors.txt",
                     sep="\t", header=T, colClasses="character", comment.char = "")
meta = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\paper1_analysisMethods\\figures\\UNCCMetaData_Final_8-5-15.txt", 
                  sep="\t", header=T, colClasses = c("numeric", "numeric", rep("character", 7)))
getHospCol <- function(strain) {
  hosp = meta$Abstracted_StudyFacility[meta$SpecNumber==as.numeric(strain)]
  return(hospCol$color[hospCol$facility==hosp])
}

jpeg("phylogeneticTreeWithHospAndOtherResGenes.jpg", res=300, height=2500, width=2500)
layout(matrix(1:4, 1, 4, byrow=F), widths=c(2, .25, 1.5, 1))

##root at node 66
rr.66 = root(kpneu, outgroup = "66")

##only give bootstrap values if > cutoff
bootcut = 50
bootstraps = as.numeric(rr.66$node.label)
rem = bootstraps <= bootcut
rr.66$node.label[rem] = ""
# rr.66$node.label = paste(rr.66$node.label, "") #add space

lad = ladderize(rr.66)

plot(lad, type="phylogram", show.node.label=T, no.margin=T, cex=.7, edge.width = 2, show.tip.label = F, 
     adj=.5, srt=45, label.offset = -.0001)

##get tips
#http://stackoverflow.com/questions/34364660/how-to-get-correct-order-of-tip-labels-in-ape-after-calling-ladderize-function
is_tip = lad$edge[,2] <= length(lad$tip.label)
ordered_tips = lad$edge[is_tip, 2]
treetips = rev(lad$tip.label[ordered_tips])

##http://grokbase.com/t/r/r-sig-phylo/137syf0c3c/coordinates-for-phylo-tips
lastPP <- get("last_plot.phylo", envir = .PlotPhyloEnv)
tip <- 1:lastPP$Ntip
XX <- lastPP$xx[tip]
YY <- lastPP$yy[tip]
xlim = lastPP$x.lim

colors = sapply(lad$tip.label, getHospCol, USE.NAMES = F)

##scale bar
add.scale.bar(cex=1, lwd=2)

##draw lines connecting to the edge
for(i in 1:length(tip)) {
  lines(x=c(XX[i], (xlim[2]+1)), y=c(YY[i], YY[i]), col=colors[i], lty=1, lwd=.5)
}
linelabel=-1.2
mtext(" A", side=3, cex=1, adj=0, line=linelabel)

####hospital plot
colors = sapply(treetips, getHospCol, USE.NAMES = F) #ladderized tree is in a different order than the tip names
par(mar=c(0,0,0,0))
numTips = length(treetips)
y = numTips:1
off=0.5 #offset from middle
plot(0, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(1,numTips), xlim=c(-off,off))
#rectangle for each sample
for(i in 1:numTips) {
  rect(-off, y[i]-off, off, y[i] + off, col = colors[i], border=NA)
}

##draw lines connecting to the edge
for(i in 1:numTips) {
  lines(x=c(-1, 1), y=c(y[i], y[i]), col=colors[i], lty=1, lwd=.5)
}

text(x=-off, y=(numTips+.6), labels="hospital", offset=0, adj=c(0,0), cex=1)

##sample name in rectangle
text(x=rep(0, numTips), y=y, treetips)

mtext("B", side=3, cex=1, adj=0, line=linelabel)

####resistance figure; other genes
res = read.table("..//blastCardsProHomologGeneTables_pid80.0_len90.0_collapsed_suppTable.txt",
                 sep="\t", header=T, colClasses="character", quote="")
# strains = sub("X", "", names(res))
# keep = strains %in% treetips
# keep[1:3] = T
# kres = res[, keep]
# percent = as.numeric(kres$percentGenomesWithGene)
# kres$cardsGene[percent > 75]
# # [1] "acrA"     "acrB"     "acrD"     "APH(3'')" "APH(6)"   "emrB"     "emrD"     "KPC"      "LEN"      "mdtB"     "mdtC"    
# # [12] "mdtD"     "OKP"      "OXA"      "SHV"      "sul1"     "TEM"  

##plot the beta-lactams only
genes = c("acrA", "acrB", "acrD", 
        "APH(3'')", "APH(6)",
        "emrB", "emrD", 
        "mdtB", "mdtC", "mdtD",
        "sul1")
subres = res[res$cardsGene %in% genes,]
# genes = c("acr", "APH", "emr", "mdt", "sul1")
# keep = rep(F, nrow(res))
# for(r in genes) {
#   keep = keep | grepl(r, res$cardsGene)
# }
# subres = res[keep,]
# subres = subres[subres$cardsGene != "APH(4)",] #only present in 1 genome
# subres = subres[subres$cardsGene != "acrE",] #not present in any kleb pneu
# subres = subres[subres$cardsGene != "acrF",] #not present in any kleb pneu
# subres = subres[subres$cardsGene != "emrA",] #not present in any kleb pneu

##get number of matching genes
counts = data.frame(matrix(NA, nrow = nrow(subres), ncol = ncol(subres)))
names(counts) = names(subres)
counts$cardsGene = subres$cardsGene
counts$numberGenomesWithGene = subres$numberGenomesWithGene
counts$percentGenomesWithGene = subres$percentGenomesWithGene
for(r in 1:nrow(subres)) {
  for(c in 4:ncol(subres)) {
    count = ifelse(subres[r,c]=="none", 0, 1) + str_count(subres[r,c], ";")
    counts[r,c] = count
  }
}
strains = sub("X", "", names(counts))
max = max(counts[,-(1:3)]) #2
par(mar=c(0,0,0,0))
plot(NA, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(1,numTips), xlim=c(-off,nrow(counts)+off-1))
##draw lines connecting to the edge
for(i in 1:numTips) {
  lines(x=c(-2, 0), y=c(y[i], y[i]), col=colors[i], lty=1, lwd=.5)
}
##plot number of genes
palColors = colorRampPalette(c("white", "red"))(5)
palColors[1] = "light gray"
for(r in 1:nrow(counts)) {
  colors = rep(NA, numTips)
  for(t in 1:length(treetips)) {
    count = counts[r, strains==treetips[t]]
    colors[t] = palColors[count+1]
  }
  #rectangle for each sample
  for(i in 1:numTips) {
    rect(-off+r-1, y[i]-off, off+r-1, y[i] + off, col = colors[i], border=NA)
  }
  text(x=-off+r-1, y=(numTips+.45), labels=counts$cardsGene[r], adj=c(0,0), cex=.75, srt=45,
       pos=4, offset=.5)
}
##draw lines separating columns
for(r in 1:(nrow(counts)-1)) {
  if(r > 1 && substr(counts$cardsGene[r], 1, 3) != substr(counts$cardsGene[r+1], 1, 3)) {
    # abline(v=off+r-1, col="black") #black line between different classes
    lines(x=c(off+r-1, off+r-1), y=c(.5,numTips+.5), col="black")
  } else {
    # abline(v=off+r-1, col="white")
    lines(x=c(off+r-1, off+r-1), y=c(.5,numTips+.5), col="white")
  }
}
mtext("C", side=3, cex=1, adj=0, line=linelabel)

write.table(counts, "..\\betaLactamases\\numberOfOtherResGenes.txt", row.names = F, col.names = T, quote=F, sep="\t")

####legend
par(mar=c(0,0,0,0))
plot(NA, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', ylim=c(0,1), xlim=c(0,1))
legend("topleft", 
       legend = c(expression(underline("Legend for B")), hospCol$facility, rep("", 3),
                  expression(underline("Legend for C")), "No genes", "1 gene", "2 genes"),
       col = c("white", hospCol$color, rep("white", 4), palColors[1:(max+1)]),
       pch=c(NA, rep(15, nrow(hospCol)), rep(NA, 4), rep(15, max+1)), 
       bty='n', cex=1.5)

dev.off()