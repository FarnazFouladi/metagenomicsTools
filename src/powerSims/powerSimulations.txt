rm(list=ls())
treatmentSampleSize <- 15
numHypotheses <- 10000
numUnder <- 0
numBonferroniUnder <-0
fractionTruePositives <- 0.1
numTruePositves <-0;

pValues <- vector();

for( j in 1 : numHypotheses ) 
{
	isATruePositive <- ( runif(1) <= fractionTruePositives )
	numTruePositves= numTruePositves + 1
	data<-vector()
	data2<-vector()

	for( i in 1 : treatmentSampleSize)
	{
		data[i] = rnorm(1, mean=3.12,sd=0.354)
	
		if( isATruePositive  ) 
		{
			data2[i] = rnorm(1, mean=3.12*0.85,sd=0.354)
		}
		else
		{
			data2[i] = rnorm(1, mean=3.12,sd=0.354)
		}
			
	}
	
	pValues[j] <- t.test(data,data2)$p.value 
	
	if( isATruePositive  && pValues[j] < 0.05 )
		numUnder = numUnder + 1
	
	
	if( isATruePositive  && pValues[j] < 0.05 / numHypotheses )
		numBonferroniUnder = numBonferroniUnder + 1	
	
	
}

numTruePositves
numUnder/numTruePositves

sortedPValues <- sort(pValues)

bhUnder <- 0;
index <- 1;

while( index <= numHypotheses &&  sortedPValues[index] < (numHypotheses * pValues[index] / index) ) 
{
	bhUnder = bhUnder + 1;
	index = index + 1;
}

bhUnder / numTruePositves
