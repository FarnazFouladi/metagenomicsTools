#quick, not particularly elegant, simulated dataset
rm(list=ls())

numRows = 3000
numCols = 100

myFrame <- data.frame(1:numRows)

#initiate the data.frame with the correct # of rows to suppress error messages.
#likely, there are much better ways to do this!
names(myFrame)[1] <- "tempColumn"

aMean = 1000
aVar = 100
for( i in 1: numCols)
{
		vals <- vector(length=numRows)
		
		for( j in 1:numRows)
		{
			aVal = round( max( rnorm(1,mean=aMean,sd=sqrt(aVar)), 1))
			vals[j] = aVal
		}
		
		colName <- paste( "sample" , i ,sep="")
		
		myFrame[[colName]] = vals
}

myFrame["tempColumn"] <- NULL
row.names(myFrame) <- paste("Gene_",1:numRows,sep="")

# run t-tests on each sample

groupA <- 1:50
groupB <- 51:100

setwd("c:\\temp")
pValues  <- vector()
pdf("plots.pdf")
myData <- data.matrix(myFrame)

#4 graphs per page
par(mfrow=c(2,2))

for( i in 1:numRows)
{
	
	pValues[i] <- t.test(myData[i,groupA],myData[i,groupB])$p.value
	aTitle <- paste("gene", i, "p=", format(pValues[i],3))
	data<- myData[1,]
	condition <-  factor( c(rep("A",50),rep("B",50)))
	someFrame <- data.frame(data,condition)
	plot(data ~ condition,title=aTitle)
	stripchart(data ~ condition, data = someFrame,vertical = TRUE, pch = 21, add=TRUE, ylab = names[index])
}

dev.off() # flush that pdf!

hist(pValues,breaks=20)