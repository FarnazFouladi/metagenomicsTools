rm(list=ls())

library("pscl")
library("lmtest")
library("nlme")


setwd("C:\\PennyChinaDataset")

taxaLevels <- c("phylum","class","order","family","genus")
#taxaLevels <- c("phylum")

for(taxa in taxaLevels ) 
{
	inFileName <- paste( taxa,  "_taxaAsColumnsLogNorm_WithMetadata.txt", sep ="")
	myT <-read.table(inFileName,header=TRUE,sep="\t")
	numCols <- ncol(myT)
	myColClasses <- c(rep("character",5), rep("numeric", numCols-5))
	myT <-read.table(inFileName,header=TRUE,sep="\t",colClasses=myColClasses)
	
	# only the forward reads
	myT <- myT[ which( myT$readNumber == "1"), ]
	
	names <- vector()
	pValuesTime <- vector()
	pValuesSubject <- vector()
	pValuesUrbanRural <- vector()
	meanBug <- vector()
	index <- 1
	pdf( paste(taxa, "boxplots.pdf", sep=""))
	
	for( i in 6:numCols)
		if( sum(myT[,i] != 0 ) > nrow(myT) / 4 )
		{
		
			bug <- myT[,i]
			meanBug[index] <- mean(bug)
			time <- factor(myT$timepoint)
			patientID <- factor(myT$patientID )
			urbanRural <- factor(myT$ruralUrban)
	
			myFrame <- data.frame(bug, time, patientID, urbanRural )
	
			fullModel <- gls( bug~  time + urbanRural , method="REML",correlation=corCompSymm(form=~1|factor(patientID)),
				data = myFrame )
				
			reducedModel <- gls( bug~  time + urbanRural , method="REML",	data = myFrame )
				
			fullModelLME <- lme(bug~  time + urbanRural , method="REML", random = ~1|factor(patientID), data = myFrame)		
	
			pValuesTime[index] <- anova(fullModelLME)$"p-value"[2]
			pValuesUrbanRural[index] <- anova(fullModelLME)$"p-value"[3]
			pValuesSubject[index] <-  anova(fullModelLME, reducedModel)$"p-value"[2]
			intraclassCoefficient<- coef(fullModel$modelStruct[1]$corStruct,unconstrained=FALSE)[[1]]
			names[index] = names(myT)[i]
			
			graphMain =  paste( names(myT)[i], " pTime=", format(pValuesTime[index], digits=3), "\n",
								" pRuralUrban= ", format(pValuesUrbanRural[index],digits=3), 
									" pSubject= " , format(	pValuesSubject[index], digits=3), "\n",
										" icc= " , format( intraclassCoefficient, digits=3 ), sep="")
			
			par(mfrow=c(3,1))
			
			plot( bug[myT$timepoint=="first_A"] ~ urbanRural[myT$timepoint=="first_A"], ylab = names[index],
					main = graphMain )	
			
			stripchart(bug[myT$timepoint=="first_A"] ~ urbanRural[myT$timepoint=="first_A"], 
			data = myFrame,vertical = TRUE, pch = 21, add=TRUE )		
			
			plot( bug[myT$timepoint=="second_B"] ~ urbanRural[myT$timepoint=="second_B"], ylab=names[index])	
			
			stripchart(bug[myT$timepoint=="second_B"] ~ urbanRural[myT$timepoint=="second_B"], 
			data = myFrame,vertical = TRUE, pch = 21, add=TRUE, ylab = names[index])		
			
			plot(bug ~ patientID  ) 		
			
			stripchart(bug[myT$ruralUrban=="rural"] ~ patientID[myT$ruralUrban=="rural"], 
			data = myFrame,vertical = TRUE, pch = 21, add=TRUE,	col = "blue")
			
			stripchart(bug[myT$ruralUrban=="urban"] ~ patientID[myT$ruralUrban=="urban"], 
			data = myFrame,vertical = TRUE, pch = 21, add=TRUE,	col = "red")
				
			index=index+1
		
		}
		
	dFrame <- data.frame( names, pValuesTime ,pValuesSubject,pValuesUrbanRural ,meanBug) 
	dFrame <- dFrame [order(dFrame$pValuesUrbanRural),]
	dFrame$adjustedPUrbanRural <- p.adjust( dFrame$pValuesUrbanRural, method = "BH" )	
	write.table(dFrame, file=paste("pValuesForTaxaTimeUrbanRural", taxa, ".txt",sep=""), sep="\t",row.names=FALSE)
		dev.off()
}