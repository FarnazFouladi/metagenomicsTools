rm(list=ls())
library("pscl")
library("lmtest")
library("nlme")

# these are available at
# https://github.com/afodor/metagenomicsTools/tree/master/src/scripts/ratSach2/rdpAnalysis/spreadsheets
setwd("C:\\Users\\Anthony\\git\\metagenomicsTools\\src\\scripts\\ratSach2\\rdpAnalysis\\spreadsheets")

taxaLevels <- c("phylum","class","order","family","genus")


for(taxa in taxaLevels ) 
{
	pdf(paste("mergedPlots_" , taxa, ".pdf"))
    inFileName <- paste( "sparseThreeColumn_", taxa, "_AsColumnsLogNormalizedPlusMetadata.txt", sep ="")
	
	myT <-read.table(inFileName,header=TRUE,sep="\t")
	numCols <- ncol(myT)
	myColClasses <- c(rep("character",6), rep("numeric", numCols-6))
	myT <-read.table(inFileName,header=TRUE,sep="\t",colClasses=myColClasses)
	
	myTCecal <- myT[ which( myT$tissue== "Cecal Content") , ]
	myTColon <- myT[ which( myT$tissue== "Colon content") , ]
	
	pValuesLineCecal <- vector()
	pValuesCageCecal <- vector()
	averageHighCecal <- vector()
	averageLowCecal <- vector()
	
	pValuesLineColon <- vector()
	pValuesCageColon <- vector()
	averageHighColon <- vector()
	averageLowColon <- vector()
	globalAverage <- vector()
	averageColon <- vector()
	averageCecal <- vector()
	
	pValuesOneWayAnovaCageCecalHigh <- vector()
	pValuesOneWayAnovaCageColonHigh <- vector()
	
	pValuesOneWayAnovaCageCecalLow <- vector()
	pValuesOneWayAnovaCageColonLow <- vector()
	
	names <- vector()
	
	index <- 1
	for( i in 11:numCols) 
	{	
		# skip rarified richness for now..
		if( i != 9 & sum(myT[,i] != 0) >= nrow(myT)/4 )
		{
			par(mfrow=c(4,1))
			
			print( paste(i , " of ", numCols, " with ", index ,sep=""))
			
			if (.Platform$OS.type == "windows") flush.console()
			
			globalAverage[index] <- mean(myT[,i])
			bug <- myTCecal[,i]
			averageCecal[index] <- mean(bug)
			line <- factor(myTCecal$line)
			cage <- factor(myTCecal$cage)
			
		
			averageHighCecal[index] <- mean( myTCecal[myTCecal$line=="High",i])
			averageLowCecal[index] <- mean( myTCecal[myTCecal$line=="Low",i])
				
			myFrame <- data.frame(bug, line, cage)
	
			reducedModel <- gls( bug~  line , method="REML",	data = myFrame )
				
			fullModelLME <- lme(bug~  line , method="REML", random = ~1|factor(cage), data = myFrame)		
	
			pValuesLineCecal[index] <- anova(fullModelLME)$"p-value"[2]
			pValuesCageCecal[index] <-  anova(fullModelLME, reducedModel)$"p-value"[2]
			
			pValuesOneWayAnovaCageCecalHigh[index] <- anova(lm(bug[line=="High"] ~ cage[line=="High"] ))$"Pr(>F)"[1]
			pValuesOneWayAnovaCageCecalLow[index] <- anova(lm(bug[line=="Low"] ~ cage[line=="Low"] ))$"Pr(>F)"[1]
			
			
			names[index] = names(myT)[i]	
			plot( bug ~ line, main = paste(names[index], " cecal by line p= " ,format(pValuesLineCecal[index],digits=3)  ))
			plot( bug ~ cage, main = paste(names[index], " cecal by cage p= " ,format(pValuesCageCecal[index], digits=3)))
		
			bug <- myTColon[,i]
			averageColon[index] <- mean(bug)
			line <- factor(myTColon$line)
			cage <- factor(myTColon$cage)
		
		
			averageHighColon[index] <- mean( myTColon[myTColon$line=="High",i])
			averageLowColon[index] <- mean( myTColon[myTColon$line=="Low",i])
				
			myFrame <- data.frame(bug, line, cage)
	
			reducedModel <- gls( bug~  line , method="REML",	data = myFrame )
				
			fullModelLME <- lme(bug~  line , method="REML", random = ~1|factor(cage), data = myFrame)		
	
			pValuesLineColon[index] <- anova(fullModelLME)$"p-value"[2]
			pValuesCageColon[index] <-  anova(fullModelLME, reducedModel)$"p-value"[2]
			pValuesOneWayAnovaCageColonHigh[index] <- anova(lm(bug[line=="High"] ~ cage[line=="High"] ))$"Pr(>F)"[1]
			pValuesOneWayAnovaCageColonLow[index] <- anova(lm(bug[line=="Low"] ~ cage[line=="Low"] ))$"Pr(>F)"[1]
			
			plot( bug ~ line, main = paste(names[index], " colon by line p= " ,format(pValuesLineColon[index],digits=3)))
			plot( bug ~ cage, main = paste(names[index], " colon by cage p= " ,format(pValuesCageColon[index],digits=3)))
		
			
			index = index + 1
			
		}		
	}
	
	dFrame <- data.frame( names, pValuesLineCecal,pValuesCageCecal, averageHighCecal, averageLowCecal,
		pValuesLineColon,pValuesCageColon, averageHighColon, averageLowColon,globalAverage ,
				averageColon,averageCecal,pValuesOneWayAnovaCageCecalHigh , pValuesOneWayAnovaCageColonHigh ,
					pValuesOneWayAnovaCageCecalLow , pValuesOneWayAnovaCageColonLow  ) 
	dFrame <- dFrame [order(dFrame$pValuesLineCecal),]
	dFrame$adjustedPLineCecal <- p.adjust( dFrame$pValuesLineCecal, method = "BH" )
	dFrame$adjustedCageCecal <- p.adjust( dFrame$pValuesCageCecal, method = "BH" ) 
	dFrame$adjustedPLineColon <- p.adjust( dFrame$pValuesLineColon, method = "BH" )
	dFrame$adjustedCageColon <- p.adjust( dFrame$pValuesCageColon, method = "BH" ) 
	dFrame$adjustedOneWayAnovaCageCecalHigh <- p.adjust( dFrame$pValuesOneWayAnovaCageCecalHigh, method = "BH" ) 
	dFrame$adjustedOneWayAnovaCageColonHigh <- p.adjust( dFrame$pValuesOneWayAnovaCageColonHigh, method = "BH" ) 
	dFrame$adjustedOneWayAnovaCageCecalLow <- p.adjust( dFrame$pValuesOneWayAnovaCageCecalLow, method = "BH" ) 
	dFrame$adjustedOneWayAnovaCageColonLow <- p.adjust( dFrame$pValuesOneWayAnovaCageColonLow, method = "BH" ) 
	
	
	
	dFrame$log10pValuesLineCecal <-  -log10(dFrame$pValuesLineCecal)
	dFrame$log10pValuesLineColon <-  -log10(dFrame$pValuesLineColon)
	dFrame$log10pValuesCageCecal <-  -log10(dFrame$pValuesCageCecal)
	dFrame$log10pValuesCageColon <-  -log10(dFrame$pValuesCageColon)
	dFrame$log10pValuesOneWayAnovaCageCecalHigh <-  -log10(dFrame$pValuesOneWayAnovaCageCecalHigh)
	dFrame$log10pValuesOneWayAnovaCageColonHigh <-  -log10(dFrame$pValuesOneWayAnovaCageColonHigh)
	dFrame$log10pValuesOneWayAnovaCageCecalLow <-  -log10(dFrame$pValuesOneWayAnovaCageCecalLow)
	dFrame$log10pValuesOneWayAnovaCageColonLow <-  -log10(dFrame$pValuesOneWayAnovaCageColonLow)
	
	
	dev.off()
	write.table(dFrame, file=paste("pValuesForLine_taxa_merged", "_", taxa, ".txt",sep=""), sep="\t",row.names=FALSE)
}
							