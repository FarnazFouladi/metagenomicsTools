rm(list=ls())
require(lme4) 
require(lmerTest)

setwd("D:\\MarkLyteTasteManuscript\\rdpAnalysis")

taxaLevels <- c("phylum","class","order","family","genus")
tissueTypes <- c("Cecal Content", "Colon content")

for(taxa in taxaLevels ) 
	for(tissue in tissueTypes) 
{
   inFileName <- paste( "sparseThreeColumn_", taxa, "_AsColumnsLogNormalizedPlusMetadata.txt", sep ="")
	
	myT <-read.table(inFileName,header=TRUE,sep="\t")
	numCols <- ncol(myT)
	myColClasses <- c(rep("character",5), rep("numeric", numCols-5))
	myT <-read.table(inFileName,header=TRUE,sep="\t",colClasses=myColClasses)
	
	myT <- myT[ which( myT$tissue== tissue) , ]
	
	pValuesLine <- vector()
	averageHigh <- vector()
	averageLow <- vector()
	names <- vector()
	
	index <- 1
	for( i in 9:numCols) 
	{	
		if( sum(myT[,i] != 0) >= nrow(myT)/4 )
		{
			myLm <- lmer( myT[,i] ~  myT$line + ( 1| factor(myT$cage) ) )
			coefs <- data.frame( coef(summary(myLm)))
			
			# if the model has errors, not all the coefs will be defined...
			if( length( coefs) > 4 )
			{
				pValuesLine[index] <- coefs[5]$Pr...t..[2]
				names[index] = names(myT)[i]
				averageHigh[index] <- mean( myT[myT$line=="High",i])
				averageLow[index] <- mean( myT[myT$line=="Low",i])
				index <- index + 1
			}
		}		
	}
	
	dFrame <- data.frame( names, pValuesLine, averageHigh, averageLow) 
	dFrame <- dFrame [order(dFrame$pValuesLine),]
	dFrame$adjustedPLine <- p.adjust( dFrame$pValuesLine, method = "BH" )
	
	write.table(dFrame, file=paste("pValuesForTime_taxa_", tissue, "_", taxa, ".txt",sep=""), sep="\t",row.names=FALSE)
}
							