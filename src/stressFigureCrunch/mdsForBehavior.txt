library("vegan")
library("nlme")
library("lmtest")

rm(list=ls())

setwd("C:\\MattStressManuscript")

myT <- read.table("closedQIIMER1_L7_LogNormwithMetadata.txt", sep="\t", header=TRUE, comment.char="@")

myT <- myT[myT$Source=="feces", ]

data <- myT[,22:60]

myPCOA <- capscale(data~1,distance="bray")
	
myMerge <- cbind( myT, myPCOA$CA$u)

write.table(myMerge , sep="\t", file=paste("pcoa_withMetadataallData",".txt",sep=""))

plot(myMerge$MDS4,myMerge$MDS5, pch = ifelse( 
	myMerge$Sex=="male", 16,5),col=ifelse(myMerge$Group=="Control", "Blue", "Red"),cex=1.6)


	
index <-1
pValuesStress <- vector()
pValuesSex <- vector()
pValuesCage <- vector()
pValuesInteraction <- vector()
mdsIndex <- vector()
names <- vector()

pdf( "behaviorMDS.pdf")
par(mfrow=c(2,1))

for( i in 491:500)
{
	yVal <- myMerge[,i]
	stress <- myMerge$Group
	sex <- myMerge$Sex
	cage <- factor(paste( myMerge$Housing, myMerge$Sex,sep="" ))
	
	myFrame <- data.frame(yVal, stress, sex, cage)
	
	myModel <- gls( yVal ~ stress * sex , method = "REML", correlation = corCompSymm(form= ~1|cage) ,
	data = myFrame )
	
	myModelNoCage <-gls( yVal ~ stress * sex , method = "REML",data = myFrame ) 
	
	myAnova <- anova(myModel)
	
	mdsIndex[index] <- index
	pValuesStress[index] <- summary(myModel)$tTable[2,4]
	pValuesSex[index] <- summary(myModel)$tTable[3,4]
	pValuesInteraction[index] <- summary(myModel)$tTable[4,4]
	pValuesCage[index] <- anova( myModel, myModelNoCage)$"p-value"[2]
	names[index] <- names(myMerge)[i]
	
	boxplot( yVal~ stress *sex, main= names[index], las=2) 
	
	
	stripchart(yVal~ stress *sex, 
					data = myFrame,vertical = TRUE, pch = 21, add=TRUE )		
			
	boxplot( yVal~ cage, main= names[index], las=2) 
	
	stripchart(yVal~ cage, 
					data = myFrame,vertical = TRUE, pch = 21, add=TRUE )		
	
	
	index <- index + 1
}

dFrame <- data.frame(  names,pValuesStress,pValuesSex,pValuesInteraction,pValuesCage)

dFrame <- dFrame [order(dFrame$pValuesInteraction),]
dFrame$pValuesStressAdjusted<- p.adjust( dFrame$pValuesStress, method = "BH")
dFrame$pValuesSexAdjusted<- p.adjust( dFrame$pValuesSex, method = "BH")
dFrame$pValuesInteractionAdjusted<- p.adjust( dFrame$pValuesInteraction, method = "BH")
dFrame$pValuesCageAdjusted<- p.adjust( dFrame$pValuesCage, method = "BH")

dev.off()
	
write.table(dFrame, file=paste("behavior_models", ".txt",sep=""), sep="\t",row.names=FALSE)

pValuesCage<- p.adjust(pValuesCage, method="BH")
plot( mdsIndex, -log10(pValuesCage), col="grey",pch=16,ylim=c(0,10))
lines( mdsIndex, -log10(pValuesCage), col="grey")


pValuesStress <- p.adjust(pValuesStress, method="BH")
points( mdsIndex, -log10( pValuesStress), ylim=c(0,10),pch=16,col="black")
lines( mdsIndex, -log10( pValuesStress), ylim=c(0,10),col="black")


pValuesSex<- p.adjust(pValuesSex, method="BH")
points( mdsIndex, -log10( pValuesSex),col="blue",pch=16)
lines( mdsIndex, -log10( pValuesSex),col="blue")


pValuesInteraction<- p.adjust(pValuesInteraction, method="BH")
points( mdsIndex, -log10( pValuesInteraction),col="red",pch=16)
lines( mdsIndex, -log10( pValuesInteraction), col="red")


lines( c(0,10), c( -log10(.05),-log10(.05)) , lty=2)
eigenvals(myPCOA)/sum(eigenvals(myPCOA))
